dispkeyfunc3.mac.txt

　これは、<dispkeyfunc3.mac> の「マニュアル」ファイルです。
　マクロの概要は、配布ファイルに同梱の<README.txt>をごらんください。

1. 使い方

1-1. 起動する
 1)　単にマクロを起動した場合、アウトプット枠を表示し、そこにファンクションキー・バーのようなものを図示します。
 2)
 ・　その状態から、[Ctrl]、[Shift]、[Alt](以下、「修飾キー」)を押下すると、ファンクションキー・バーのように、押したキーにあわせて、割り当てられている機能を表示します。
   　たとえば[Ctrl]を押すと、[Ctrl+F1〜F12]に割り当てられた機能を図示します。
 ・　「修飾キー」以外のキーを押すと、押したキーやそれに関連したキーの機能を図示します。
   　たとえば[A]を押すと、[Ctrl+A]や[Ctrl+Shift+A]など全ての修飾キーの組み合わせを図示します。
   　ファンクションキーや秀丸で割り当てることができる特殊キー([Home]とか[Tab]とか[Enter]とか）、数字や文字キー、テンキーが対象です。
   　ただし、マウスクリック関係は無理です。また、[Shift+Space]、[Ctrl+Esc]などのように、OS全体で使われているショートカットキーや、デスクトップやスタートメニューの中で設定したショートカットキーを押下した場合、そちらの実行が優先されます。
 3)
 ・　修飾キー以外のキーを押し続けて数秒(初期設定では2秒）経過すると、割り当てられている機能を実行し終了します。
   　たとえば、[Ctrl+A]を押し続けていると、「すべてを選択」されます。
   (厳密に言うと、数秒経過してからキーを放した瞬間に実行されます。）
 ・　何も押していない、または修飾キーのみを押し続けている場合は、数秒(初期設定では5秒）後に自動でマクロを終了します。
   　終了時には、表示に使ったアウトプット枠を自動的に閉じます。


 　上記の 3)において、機能が割り当たっていないキーを押下した場合は、たとえば[Shift+@]の機能として「`を入力」と表示したり、機能が割り当てされていない/できない場合にはその旨を表示することもできます。
 　初期設定では、うっとうしいのでなにも表示しないようになっています。
 　単独(修飾キーを押さない状態)の四角かっこ [ とセミコロン ; に割り当てられた機能は、諸般の制限により表示できません。

 　機能名のフォーマットは、テンプレートファイルをいじれば、ある程度の変更はできます。
 　なお、ファンクションキー・バーのフォーマットは変更できません。

1-2. うまくいかなかった場合
 　秀丸エディッタの実行ファイルがあるフォルダに、KEY.TXTがあるか確認してください。その他、管理者権限を確認してください。
 　本マクロの設定を見直してください。設定次第で、結構それなり(ご所望)の動作をします。


2. 設定方法

 　設定は、マクロ自体に設定を書き込みます。
 　従って、マクロをインストールするたびに設定し直す必要があります。

2-1. $Template : テンプレートファイル名
 　テンプレートファイルの名前を設定します。
 　テンプレートファイルは、マクロから読むことができればどのフォルダにあってもかまいません。

 $Template = currentmacrofilename + ".template";		// 初期値

2-2. #TimeToExit : キーを何も押下していないときに、マクロを終了するまでの時間(ミリ秒)。
 　キーを何も押下していないときに、ここで設定した時間が経過するとマクロは自動的に終了します。
 　修飾キーしか押下していないときにもこの時間が適用されます。

 #TimeToExit = 5000;		// 初期値

2-3. #TimeToExec : キーを押下し続けているときに、機能を実行するまでの時間(ミリ秒)。
 　キー(修飾キー以外)を押下しているときに、ここで設定した時間が経過すると、そのキーに割り当てられた機能を実行します。たとえば、[Ctrl+A]を押下し続けていると、Ctrl+Aに割り当てられた機能を実行します。

 #TimeToExec = 2000;		// 初期値

2-4. #FbarCol : "ファンクションキー・バーのようなもの" にデフォルトで表示する修飾キーの種類(論理和)
 　マクロ起動時や何もキーを押下していないときにはファンクションキー・バーのようなものを表示するのですが、その際に、どの種類の修飾キーに対応する機能を表示するかを指定します。
 　ここに設定していない修飾キー(に対応する機能)は、そのキーを押下することで表示されます。
 　下記の数字の論理和からなる、1桁以上の16進数で設定します。下位桁が上の行に表示されます。
 　たとえば「0x328」と設定した場合は、1列目に"修飾キーなしのとき"(=8)、2列目に"Ctrlキーと組み合わたとき"(=2)、3列目に"Shiftキー+Ctrlキーと組み合わせたとき"(=3)のファンクションキーの各機能を順に表示します。"Shiftキーと組み合わせたとき"を表示するには、マクロ実行中に[Shift]を押下してください。

 各バイトの値 : (論理和で設定できます)
   1 = Shift
   2 = Ctrl
   4 = Alt
   8 = 修飾キーなし(ファンクションキー単独)

 #FbarCol = 0x28;		// 初期値

2-5. #MakeDat : datファイルを作るか(論理和)
 　datファイルとは、KEY.TXTのデータを利用して作られ、KEY.TXTの代わりに用いられる本マクロ用の「キー割り当て一覧」ファイルです。
 　本マクロのマクロ本体があるフォルダに "<マクロファイル名>.dat" というファイル名で作られます(マクロファイルがdispkeyfunc3.macならdispkeyfunc3.mac.dat)。
 　あくまでKEY.TXTから作るものなので、マクロ起動前には必ずKEY.TXTは最新の状態を反映しておく必要があります。
 　なおdatファイルを作る場合は、以下のような機能が追加されます。作らない場合は、datファイルの有無によらずすべて使えません。
 ・ショートカットキーを設定できない/していない組み合わせには、その旨を表示すること。
 ・文字キー単独またはShiftと組み合わせたときのコマンド名に、入力される文字や記号を表示すること。
 ・システム全体に関わるショートカットキー(Alt+F4やAlt+Spaceなど)でそのコマンド名を表示する。
 ・ファイル先頭の[]を確認し、なければ挿入する。
 ・コマンド名の短縮化: カタカナを半角に。「ﾏｸﾛ(数字):」「(標準の動作:)」「ﾒﾆｭｰ(数字):」を削除。コマンド名が指定された文字数より短くなるまで、コマンド名のひらがなを半角(カタカナ)に変換、コマンド名のひらがなを削除、を順次試す。その結果、コマンド名が「直直」とかになっても（ﾟεﾟ）ｷﾆｼﾅｲ!!。

 0x00F : datファイルを作るか。
   0 = 作らない。
   1 = キーアサインが変更されているっぽい場合に。
   2 = キーアサインが変更されてない場合に。
 0x0F0 : 作る前の問い合わせ。
   0 = しない(常に自動)。
   1 = キーアサインが変更されているっぽい場合で、0x001ビットが立っているとき。
   2 = キーアサインが変更されてない場合で、0x002ビットが立っているとき。
 0xF00 : 変更確認。複数指定したときは、数字の若い方から試していき、いずれかが真の時に変更されているっぽい場合と見なす。
   0 = しない(常に変更と見なす)。
   1 = KEY.TXTと現存datファイルとの新旧。もっとも簡便な方法で速いです。

 #MakeDat = 0x331;		//初期値

2-6. #FuncNameLength : コマンド名の最大長(半角換算)
 　コマンド名を表示するとき、ここで設定した文字数以下になるように短縮します。
 　この値は特に変える必要はないです。というよりは、この数値を変更するとテンプレートも書き換えないと表示が乱れることがあります。
 　"ファンクションキー・バー"では無視されます。"ファンクションキー・バー"の文字数・表示も変えたいのならdisp_fkey関数を書き換えててください。

 #FuncNameLength = 10;		// 初期値
